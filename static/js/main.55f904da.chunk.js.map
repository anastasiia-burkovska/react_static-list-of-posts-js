{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","email","name","className","href","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAEf,OACE,mCACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGC,OCRIG,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAML,EAAgBI,EAAhBJ,KAAMD,EAAUK,EAAVL,MAEpB,OACE,mCACE,sBAAKE,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,IAGF,OAED,mBACEC,UAAU,qBACVC,KAAI,iBAAYE,EAAQL,OAF1B,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGI,UCnBEC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,mCACE,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQK,aCLVC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBb,EAAgCa,EAAhCb,KAAMS,EAA0BI,EAA1BJ,SAAUK,EAAgBD,EAAhBC,MAAOP,EAASM,EAATN,KAE/B,OACE,mCACE,sBAAKJ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUd,KAAMA,UAIpB,mBAAGG,UAAU,iBAAb,SACGI,IAGH,uBACCM,EAAKJ,SAASM,OAAS,EACtB,cAAC,EAAD,CAAaN,SAAUA,IAEvB,mBAAG,UAAQ,oBAAX,oCC1BGO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,mCACE,qBAAKd,UAAU,WAAf,SACGc,EAAMP,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKF,YCSb,IAAMM,EAAQC,EAAgBR,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cb,MAZmBmB,EAYDN,EAAKM,OAXhBC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKW,KAAOQ,MAC3C,MAWLV,UARsBa,EAQGT,EAAKF,GAPvBY,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQgB,SAAWA,MAC1D,QAFP,IAAwBA,EALHH,KAgBRM,EAAM,kBACjB,mCACE,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUc,MAAOA,UCxBvBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.55f904da.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <>\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    </>\n  );\n};\n","export const CommentInfo = ({ comment }) => {\n  const { body, name, email } = comment;\n\n  return (\n    <>\n      <div className=\"CommentInfo\">\n        <div className=\"CommentInfo__title\">\n          <strong className=\"CommentInfo__name\">\n            {name}\n          </strong>\n\n          {' by '}\n\n          <a\n            className=\"CommentInfo__email\"\n            href={`mailto:${comment.email}`}\n          >\n            {email}\n          </a>\n        </div>\n\n        <div className=\"CommentInfo__body\">\n          {body}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo\n          comment={comment}\n          key={comment.id}\n        />\n      ))}\n    </div>\n  </>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const { user, comments, title, body } = post;\n\n  return (\n    <>\n      <div className=\"PostInfo\">\n        <div className=\"PostInfo__header\">\n          <h3 className=\"PostInfo__title\">{title}</h3>\n\n          <p>\n            {' Posted by  '}\n\n            <UserInfo user={user} />\n          </p>\n        </div>\n\n        <p className=\"PostInfo__body\">\n          {body}\n        </p>\n\n        <hr />\n        {post.comments.length > 0 ? (\n          <CommentList comments={comments} />\n        ) : (\n          <b data-cy=\"NoCommentsMessage\">\n            No comments yet\n          </b>\n        )}\n      </div>\n    </>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <>\n    <div className=\"PostList\">\n      {posts.map(post => (\n        <PostInfo\n          post={post}\n          key={post.id}\n        />\n      ))}\n    </div>\n  </>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n    || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <>\n    <section className=\"App\">\n      <h1 className=\"App__title\">Static list of posts</h1>\n\n      <PostList posts={posts} />\n    </section>\n  </>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}